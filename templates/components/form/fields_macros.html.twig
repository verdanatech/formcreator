{#
 # ---------------------------------------------------------------------
 # Formcreator is a plugin which allows creation of custom forms of
 # easy access.
 # ---------------------------------------------------------------------
 # LICENSE
 #
 # This file is part of Formcreator.
 #
 # Formcreator is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 #
 # Formcreator is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Formcreator. If not, see <http://www.gnu.org/licenses/>.
 # ---------------------------------------------------------------------
 # @copyright Copyright Â© 2011 - 2021 Teclib'
 # @license   http://www.gnu.org/licenses/gpl.txt GPLv3+
 # @link      https://github.com/pluginsGLPI/formcreator/
 # @link      https://pluginsglpi.github.io/formcreator/
 # @link      http://plugins.glpi-project.org/#/plugin/formcreator
 # ---------------------------------------------------------------------
 #}
{% import 'components/form/fields_macros.html.twig' as fields %}

{% macro dropdownQuestionType(name, value, label = '', options = {}) %}
   {% import 'components/form/fields_macros.html.twig' as fields %}

   {% if options.multiple %}
      {# Needed for empty value as the input wont be sent in this case... we need something to know the input was displayed AND empty #}
      {% set defined_input_name = "_#{name}_defined" %}
      <input type="hidden" name="{{ defined_input_name }}" value="1"></input>

      {# Multiple values will be set, input need to be an array #}
      {% set name = "#{name}[]" %}
   {% endif %}
   {% set options = {'rand': random()}|merge(options) %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}

   {% set field %}
      {% do call('PluginFormcreatorQuestion::dropdownQuestionType', [name, {
         'value': value,
         'rand': rand,
         'width': '100%',
      }|merge(options)]) %}
   {% endset %}
   {% if field|trim is not empty %}
      {{ fields.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
   {% endif %}
{% endmacro %}

{% macro dropdownDropdownSubType(name, value, label = '', options = {}) %}
   {% import 'components/form/fields_macros.html.twig' as fields %}

   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {% do call('PluginFormcreatorQuestion::dropdownDropdownSubType', [name, {
         'value': value,
         'rand': rand,
         'width': '100%',
      }|merge(options)]) %}
   {% endset %}

   {{ fields.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
{% endmacro %}

{% macro dropdownObjectSubType(name, value, label = '', options = {}) %}
   {% import 'components/form/fields_macros.html.twig' as fields %}

   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {% do call('PluginFormcreatorQuestion::dropdownObjectSubType', [name, {
         'value': value,
         'rand': rand,
         'width': '100%',
      }|merge(options)]) %}
   {% endset %}

   {{ fields.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
{% endmacro %}

{% macro dropdownEntityRestrict(name, value, label = '', options = {}) %}
   {% import 'components/form/fields_macros.html.twig' as fields %}

   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {% do call('\\GlpiPlugin\\Formcreator\\Filter\\EntityFilter::dropdown', [name, {
         'value': value,
         'rand': rand,
         'width': '100%',
      }|merge(options)]) %}
   {% endset %}

   {{ fields.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
{% endmacro %}

{% macro dropdownItilCategoryFilter(name, value, label = '',  options = {}) %}
   {% import 'components/form/fields_macros.html.twig' as fields %}

   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {% do call('\\GlpiPlugin\\Formcreator\\Filter\\ItilCategoryFilter::dropdown', [name, {
         'value': value,
         'rand': rand,
         'width': '100%',
      }|merge(options)]) %}
   {% endset %}

   {{ fields.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
{% endmacro %}

{% macro rangeField(name, min, max, label = '', options = {}) %}
    {% import 'components/form/fields_macros.html.twig' as fields %}
    {% if options.fields_template.isMandatoryField(name) %}
        {% set options = {'required': true}|merge(options) %}
    {% endif %}

    {% set field %}
        <input type="number" id="range_min"
                class="form-control"
                name="{{ name }}[min]" value="{{ min }}"
            {{ options.readonly ? 'readonly' : '' }}
            {{ options.disabled ? 'disabled' : '' }}
            {{ options.required ? 'required' : '' }} />
        <input type="number" id="range_max"
                class="form-control"
                name="{{ name }}[max]" value="{{ max }}"
            {{ options.readonly ? 'readonly' : '' }}
            {{ options.disabled ? 'disabled' : '' }}
            {{ options.required ? 'required' : '' }} />
        {% endset %}
        {{ fields.field(name, field, label, options) }}
{% endmacro %}

{% macro dropdownLanguageField(name, value, label = '', options = {}) %}
   {% import 'components/form/fields_macros.html.twig' as fields %}
   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {% do call('Dropdown::showLanguages', [name, {
         'value': value,
         'rand': rand,
         'width': '100%',
      }|merge(options)]) %}
   {% endset %}

   {{ fields.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
{% endmacro %}

{% macro dropdownFontAwesomeIconField(name, value, label = '', options = {}) %}
   {% import 'components/form/fields_macros.html.twig' as fields %}
   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {% do call('PluginFormcreatorCommon::showFontAwesomeDropdown', [name, {
         'value': value,
         'rand': rand,
         'width': '100%',
      }|merge(options)]) %}
   {% endset %}

   {{ fields.field(name, field, label, options|merge({'id': 'dropdown_' ~ name ~ '_' ~ options.rand})) }}
{% endmacro %}

{% macro dropdownValidatorUser(name, options) %}
   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

      {% set field %}
      {% do call('PluginFormcreatorForm_Validator::dropdownValidatorUser', [name, {
         'value': value,
         'rand': rand,
         'width': '100%',
      }|merge(options)]) %}
   {% endset %}
   {{ field }}
{% endmacro %}

{% macro dropdownValidatorGroup(name, options) %}
   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {% do call('PluginFormcreatorForm_Validator::dropdownValidatorGroup', [name, {
         'value': value,
         'rand': rand,
         'width': '100%',
      }|merge(options)]) %}
   {% endset %}
   {{ field }}
{% endmacro %}

{% macro dropdownRequestType(name, value, label = '', options = {}) %}
   {% import 'components/form/fields_macros.html.twig' as fields %}
   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {% do call('Ticket::dropdownType', [name, {
         'value': value,
         'rand': rand,
         'width': '100%',
         'toadd': {0 : constant('Dropdown::EMPTY_VALUE') }
      }|merge(options)]) %}
   {% endset %}
   {{ fields.field(name, field, label, options) }}
{% endmacro %}

{% macro timeField(name, value, label = '', options = {}) %}
   {% import 'components/form/fields_macros.html.twig' as fields %}
   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {% do call('Html::showTimeField', [name, {
         'value': value,
         'rand': rand,
         'width': '100%'
      }|merge(options)]) %}
   {% endset %}
   {{ fields.field(name, field, label, options) }}
{% endmacro %}

{% macro dropdownUrgencyType(name, value, label = '', options = {}) %}
   {% import 'components/form/fields_macros.html.twig' as fields %}
   {% set options = {'rand': random()}|merge(options) %}

   {% if options.disabled %}
      {% set options = options|merge({specific_tags: {'disabled': 'disabled'}}) %}
   {% endif %}
   {% if options.fields_template.isMandatoryField(name) %}
      {% set options = {'specific_tags': {'required': true}}|merge(options) %}
   {% endif %}

   {% set field %}
      {% do call('Ticket::dropdownUrgency', [{
         'name' : name,
         'value': value,
         'rand': rand,
         'width': '100%'
      }|merge(options)]) %}
   {% endset %}
   {{ fields.field(name, field, label, options) }}
{% endmacro %}
